<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7QNWjezg7Tp06kBdZBZwN99x1fWQF9Af/9k=
</value>
  </data>
</root>